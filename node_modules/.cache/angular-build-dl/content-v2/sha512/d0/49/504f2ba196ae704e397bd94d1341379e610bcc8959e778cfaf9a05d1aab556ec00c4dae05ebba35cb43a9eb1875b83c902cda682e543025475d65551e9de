{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.constant.ts","webpack:///src/app/app.module.ts","webpack:///src/app/auth.guard.ts","webpack:///src/app/auth.interceptor.ts","webpack:///src/app/films/create/create.component.ts","webpack:///src/app/films/create/create.component.html","webpack:///src/app/films/film-view/film-view.component.ts","webpack:///src/app/films/film-view/film-view.component.html","webpack:///src/app/films/films.component.ts","webpack:///src/app/films/films.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/services/auth/auth.service.ts","webpack:///src/app/services/films.service.ts","webpack:///src/app/services/upload.service.ts","webpack:///src/app/shared/footer/footer.component.ts","webpack:///src/app/shared/footer/footer.component.html","webpack:///src/app/shared/navbar/navbar.component.ts","webpack:///src/app/shared/navbar/navbar.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","ApiUrl","filepath","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AuthGuard","authService","router","next","state","isLoggedIn","navigate","AuthInterceptor","authToken","getToken","clone","setHeaders","Authorization","handle","CreateComponent","films","Upload","genre","invalid","invalidphoto","success","onUpload","onSubmit","dropdownList","dropdownSettings","singleSelection","itemsShowLimit","allowSearchFilter","today","Date","mindate","year","getFullYear","month","getMonth","day","getDate","console","log","name","description","country","releasedate","rating","ticketprice","image","film","photo","createFilm","subscribe","res","upload","file","replace","uploaderror","message","err","event","target","files","length","item","push","filter","elem","index","self","indexOf","items","onItemSelect","selectImage","submit","FilmViewComponent","route","location","filmid","film_id","comments","posting","getCurrentNavigation","extras","loggedIn","getFilm","JSON","parse","comment","postComment","status","getComments","back","getAllComments","FilmsComponent","filmService","getAllFilms","data","forEach","element","getDetail","LoginComponent","onlogin","email","password","errormessage","error","validateEmail","login","re","test","String","toLowerCase","RegisterComponent","onregister","user","register","AuthService","http","headers","set","currentUser","post","pipe","result","localStorage","setItem","access_token","removeItem","getItem","api","get","handleError","msg","ErrorEvent","FilmsService","providedIn","UploadService","formData","FormData","append","FooterComponent","NavbarComponent","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport {LoginComponent} from './login/login.component';\nimport { RegisterComponent } from  './register/register.component';\nimport { FilmsComponent } from  './films/films.component';\nimport { FilmViewComponent } from  './films/film-view/film-view.component';\nimport { CreateComponent } from  './films/create/create.component';\n\n\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'films', pathMatch: 'full' },\n  { path: 'films', component: FilmsComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component : RegisterComponent},\n  { path: 'films/create', component : CreateComponent},\n  { path: 'films/:flim_slug_name', component : FilmViewComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'films-client';\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n<!-- <app-footer></app-footer> -->\n","export const ApiUrl = 'http://localhost:3000/api/'; // api path to server\nexport const filepath =\"http://localhost:3000/\"; //  uploaded file path to server\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport { HttpClient,HttpClientModule,HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\n\nimport { AuthService } from './services/auth/auth.service';\nimport { AuthGuard } from './auth.guard';\nimport { AuthInterceptor } from './auth.interceptor';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { NavbarComponent } from './shared/navbar/navbar.component';\nimport { FooterComponent } from './shared/footer/footer.component';\nimport { FilmsComponent } from './films/films.component';\nimport { FilmViewComponent } from './films/film-view/film-view.component';\nimport { CreateComponent } from './films/create/create.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    NavbarComponent,\n    FooterComponent,\n    FilmsComponent,\n    FilmViewComponent,\n    CreateComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    NgbModule,\n    NgMultiSelectDropDownModule.forRoot(),\n    CommonModule,\n    AppRoutingModule\n  ],\n  providers: [\n    HttpClient,\n    AuthService,\n    AuthGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthService } from './services/auth/auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(public authService: AuthService,private router: Router) { }\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this.authService.isLoggedIn == true) {\n      return true;\n    }\n\n    this.router.navigate(['login']);\n    return false;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpInterceptor, HttpRequest, HttpHandler } from \"@angular/common/http\";\nimport { AuthService } from \"./services/auth/auth.service\";\n\n@Injectable()\n\nexport class AuthInterceptor implements HttpInterceptor {\n    constructor(private authService: AuthService) { }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\n        const authToken = this.authService.getToken();\n        req = req.clone({\n            setHeaders: {\n                Authorization: \"Bearer \" + authToken\n            }\n        });\n        return next.handle(req);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { UploadService } from '../../services/upload.service';\nimport { FilmsService } from '../../services/films.service';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport { filepath }  from '../../app.constant';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n\n  name:string;\n  description: string;\n  country:string;\n  releasedate: any;\n  rating:number;\n  ticketprice:number;\n  genre: any = [];\n  photo : string;\n  image : string;\n  invalid:boolean = false;\n  invalidphoto : boolean = false;\n  success : boolean = false ;\n  onUpload :boolean = false;\n  onSubmit :boolean = false;\n  dropdownList = ['Action','Thriller','Horror', 'Comedy','Drama', 'Romance', 'Sci-Fi', 'Adventure'];\n  dropdownSettings : IDropdownSettings = {\n    singleSelection: false,\n    itemsShowLimit: 10,\n    allowSearchFilter: true\n  };\n  mindate;\n  uploaderror:string;\n\n\n  constructor(private films : FilmsService, private Upload : UploadService) { }\n\n  ngOnInit(): void {\n    let today= new Date();\n    this.mindate = {year : today.getFullYear(),month: today.getMonth()+1, day: today.getDate()}\n  }\n\n  submit(){\n    console.log('name',this.name);\n    console.log('desc',this.description);\n    console.log('name',this.country);\n    console.log('release',this.releasedate);\n    console.log('reating',this.rating);\n    console.log('ticket',this.ticketprice);\n    console.log('genre',this.genre);\n    console.log('image',this.image);\n    if(this.name == null || this.description == null || this.country== null || this.releasedate==null || this.rating ==null|| this.ticketprice == null || this.genre == []|| this.image == null){\n      console.log('error');\n      return this.invalid = true;\n    }\n\n    this.releasedate = this.releasedate.year+'-'+this.releasedate.month+'-'+this.releasedate.day;\n\n    let film = {\n      name : this.name,\n      description : this.description,\n      country : this.country,\n      releasedate : this.releasedate,\n      ticketprice : this.ticketprice,\n      rating : this.rating,\n      genre : this.genre,\n      photo : this.image\n    }\n\n    console.log('film',film);\n\n    this.onSubmit = true;\n\n    this.films.createFilm(film).subscribe(res =>{\n      this.onSubmit = false;\n      // this.image = \"\";\n\n    })\n\n\n  }\n\n  uploadImage(){\n    if(this.photo == null){\n      return this.invalid = true;\n    }\n    this.onUpload = true;\n    this.Upload.upload(this.photo).subscribe( (res:any) =>{\n      if(res.success){\n        res.file = res.file.replace('/public','');\n        this.image = filepath + res.file;\n        console.log('image',this.image);\n      }\n      else{\n        this.uploaderror = res.message;\n      }\n      this.onUpload = false;\n      console.log('upload',this.onUpload);\n    },\n    err =>{\n      this.onUpload = false;\n    })\n\n  }\n\n  selectImage(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.photo = file;\n    }\n    console.log('file',this.photo);\n  }\n\n  onItemSelect(item) {\n    console.log(item);\n    this.genre.push(item);\n    this.genre = this.genre.filter(function(elem, index, self) {\n      return index === self.indexOf(elem);\n    })\n\n  }\n  onSelectAll(items: any) {\n    this.genre.push(items);\n    this.genre = this.genre.filter(function(elem, index, self) {\n      return index === self.indexOf(elem);\n    })\n  }\n\n}\n","<div class=\"row mt-5\">\n  <div class=\"container\">\n    <div class=\"col-md-8 item\">\n      <h3 class=\"text-center my-3\">Create a New Film</h3>\n      <form>\n          <div class=\"form-group\">\n            <label for=\"exampleFormControlInput1\">Film name</label>\n            <input type=\"text\" class=\"form-control\" name=\"name\" [(ngModel)]=\"name\" [ngClass]=\"name == null && invalid ? 'is-invalid' : '' \" id=\"exampleFormControlInput1\" placeholder=\"Film name\" required>\n            <div class=\"invalid-feedback\">\n              Provide a Movie Name\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label>Film Genre</label>\n            <ng-multiselect-dropdown\n              [ngClass]=\"genre == null && invalid ? 'is-invalid' : '' \"\n              name = \"genre\"\n              [placeholder]=\"'Select Movie Genre'\"\n              [data]=\"dropdownList\"\n              [(ngModel)]=\"genre\"\n              [settings]=\"dropdownSettings\"\n              (onSelect)=\"onItemSelect($event)\"\n            >\n          </ng-multiselect-dropdown>\n              <div class=\"invalid-feedback\" *ngIf=\"invalid ==true&&genre==null\">\n              Select Film Genre\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"validationServerUsername\">Movie Rating</label>\n              <select class=\"form-control\" name=\"rating\" [ngClass]=\"(rating==null&&invalid==true)? 'is-invalid': ''\" name=\"rating\" [(ngModel)]= \"rating\" required>\n                <option disabled selected>Enter Movie rating</option>\n                <option>1</option>\n                <option>2</option>\n                <option>3</option>\n                <option>4</option>\n                <option>5</option>\n              </select>\n              <div class=\"invalid-feedback\" *ngIf=\"invalid ==true&&rating==null\">\n                Please Select a Rating.\n              </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"validationServer03\">Country</label>\n            <select name=\"country\" class=\"form-control\" name=\"country\" [ngClass]=\"(country==null&&invalid==true)? 'is-invalid': ''\"  [(ngModel)]=\"country\" required>\n              <option disabled selected>Select Country</option>\n                <option value=\"Afghanistan\">Afghanistan</option>\n                <option value=\"Åland Islands\">Åland Islands</option>\n                <option value=\"Albania\">Albania</option>\n                <option value=\"Algeria\">Algeria</option>\n                <option value=\"American Samoa\">American Samoa</option>\n                <option value=\"Andorra\">Andorra</option>\n                <option value=\"Angola\">Angola</option>\n                <option value=\"Anguilla\">Anguilla</option>\n                <option value=\"Antarctica\">Antarctica</option>\n                <option value=\"Antigua and Barbuda\">Antigua and Barbuda</option>\n                <option value=\"Argentina\">Argentina</option>\n                <option value=\"Armenia\">Armenia</option>\n                <option value=\"Aruba\">Aruba</option>\n                <option value=\"Australia\">Australia</option>\n                <option value=\"Austria\">Austria</option>\n                <option value=\"Azerbaijan\">Azerbaijan</option>\n                <option value=\"Bahamas\">Bahamas</option>\n                <option value=\"Bahrain\">Bahrain</option>\n                <option value=\"Bangladesh\">Bangladesh</option>\n                <option value=\"Barbados\">Barbados</option>\n                <option value=\"Belarus\">Belarus</option>\n                <option value=\"Belgium\">Belgium</option>\n                <option value=\"Belize\">Belize</option>\n                <option value=\"Benin\">Benin</option>\n                <option value=\"Bermuda\">Bermuda</option>\n                <option value=\"Bhutan\">Bhutan</option>\n                <option value=\"Bolivia\">Bolivia</option>\n                <option value=\"Bosnia and Herzegovina\">Bosnia and Herzegovina</option>\n                <option value=\"Botswana\">Botswana</option>\n                <option value=\"Bouvet Island\">Bouvet Island</option>\n                <option value=\"Brazil\">Brazil</option>\n                <option value=\"British Indian Ocean Territory\">British Indian Ocean Territory</option>\n                <option value=\"Brunei Darussalam\">Brunei Darussalam</option>\n                <option value=\"Bulgaria\">Bulgaria</option>\n                <option value=\"Burkina Faso\">Burkina Faso</option>\n                <option value=\"Burundi\">Burundi</option>\n                <option value=\"Cambodia\">Cambodia</option>\n                <option value=\"Cameroon\">Cameroon</option>\n                <option value=\"Canada\">Canada</option>\n                <option value=\"Cape Verde\">Cape Verde</option>\n                <option value=\"Cayman Islands\">Cayman Islands</option>\n                <option value=\"Central African Republic\">Central African Republic</option>\n                <option value=\"Chad\">Chad</option>\n                <option value=\"Chile\">Chile</option>\n                <option value=\"China\">China</option>\n                <option value=\"Christmas Island\">Christmas Island</option>\n                <option value=\"Cocos (Keeling) Islands\">Cocos (Keeling) Islands</option>\n                <option value=\"Colombia\">Colombia</option>\n                <option value=\"Comoros\">Comoros</option>\n                <option value=\"Congo\">Congo</option>\n                <option value=\"Congo, The Democratic Republic of The\">Congo, The Democratic Republic of The</option>\n                <option value=\"Cook Islands\">Cook Islands</option>\n                <option value=\"Costa Rica\">Costa Rica</option>\n                <option value=\"Cote D'ivoire\">Cote D'ivoire</option>\n                <option value=\"Croatia\">Croatia</option>\n                <option value=\"Cuba\">Cuba</option>\n                <option value=\"Cyprus\">Cyprus</option>\n                <option value=\"Czech Republic\">Czech Republic</option>\n                <option value=\"Denmark\">Denmark</option>\n                <option value=\"Djibouti\">Djibouti</option>\n                <option value=\"Dominica\">Dominica</option>\n                <option value=\"Dominican Republic\">Dominican Republic</option>\n                <option value=\"Ecuador\">Ecuador</option>\n                <option value=\"Egypt\">Egypt</option>\n                <option value=\"El Salvador\">El Salvador</option>\n                <option value=\"Equatorial Guinea\">Equatorial Guinea</option>\n                <option value=\"Eritrea\">Eritrea</option>\n                <option value=\"Estonia\">Estonia</option>\n                <option value=\"Ethiopia\">Ethiopia</option>\n                <option value=\"Falkland Islands (Malvinas)\">Falkland Islands (Malvinas)</option>\n                <option value=\"Faroe Islands\">Faroe Islands</option>\n                <option value=\"Fiji\">Fiji</option>\n                <option value=\"Finland\">Finland</option>\n                <option value=\"France\">France</option>\n                <option value=\"French Guiana\">French Guiana</option>\n                <option value=\"French Polynesia\">French Polynesia</option>\n                <option value=\"French Southern Territories\">French Southern Territories</option>\n                <option value=\"Gabon\">Gabon</option>\n                <option value=\"Gambia\">Gambia</option>\n                <option value=\"Georgia\">Georgia</option>\n                <option value=\"Germany\">Germany</option>\n                <option value=\"Ghana\">Ghana</option>\n                <option value=\"Gibraltar\">Gibraltar</option>\n                <option value=\"Greece\">Greece</option>\n                <option value=\"Greenland\">Greenland</option>\n                <option value=\"Grenada\">Grenada</option>\n                <option value=\"Guadeloupe\">Guadeloupe</option>\n                <option value=\"Guam\">Guam</option>\n                <option value=\"Guatemala\">Guatemala</option>\n                <option value=\"Guernsey\">Guernsey</option>\n                <option value=\"Guinea\">Guinea</option>\n                <option value=\"Guinea-bissau\">Guinea-bissau</option>\n                <option value=\"Guyana\">Guyana</option>\n                <option value=\"Haiti\">Haiti</option>\n                <option value=\"Heard Island and Mcdonald Islands\">Heard Island and Mcdonald Islands</option>\n                <option value=\"Holy See (Vatican City State)\">Holy See (Vatican City State)</option>\n                <option value=\"Honduras\">Honduras</option>\n                <option value=\"Hong Kong\">Hong Kong</option>\n                <option value=\"Hungary\">Hungary</option>\n                <option value=\"Iceland\">Iceland</option>\n                <option value=\"India\">India</option>\n                <option value=\"Indonesia\">Indonesia</option>\n                <option value=\"Iran, Islamic Republic of\">Iran, Islamic Republic of</option>\n                <option value=\"Iraq\">Iraq</option>\n                <option value=\"Ireland\">Ireland</option>\n                <option value=\"Isle of Man\">Isle of Man</option>\n                <option value=\"Israel\">Israel</option>\n                <option value=\"Italy\">Italy</option>\n                <option value=\"Jamaica\">Jamaica</option>\n                <option value=\"Japan\">Japan</option>\n                <option value=\"Jersey\">Jersey</option>\n                <option value=\"Jordan\">Jordan</option>\n                <option value=\"Kazakhstan\">Kazakhstan</option>\n                <option value=\"Kenya\">Kenya</option>\n                <option value=\"Kiribati\">Kiribati</option>\n                <option value=\"Korea, Democratic People's Republic of\">Korea, Democratic People's Republic of</option>\n                <option value=\"Korea, Republic of\">Korea, Republic of</option>\n                <option value=\"Kuwait\">Kuwait</option>\n                <option value=\"Kyrgyzstan\">Kyrgyzstan</option>\n                <option value=\"Lao People's Democratic Republic\">Lao People's Democratic Republic</option>\n                <option value=\"Latvia\">Latvia</option>\n                <option value=\"Lebanon\">Lebanon</option>\n                <option value=\"Lesotho\">Lesotho</option>\n                <option value=\"Liberia\">Liberia</option>\n                <option value=\"Libyan Arab Jamahiriya\">Libyan Arab Jamahiriya</option>\n                <option value=\"Liechtenstein\">Liechtenstein</option>\n                <option value=\"Lithuania\">Lithuania</option>\n                <option value=\"Luxembourg\">Luxembourg</option>\n                <option value=\"Macao\">Macao</option>\n                <option value=\"Macedonia, The Former Yugoslav Republic of\">Macedonia, The Former Yugoslav Republic of</option>\n                <option value=\"Madagascar\">Madagascar</option>\n                <option value=\"Malawi\">Malawi</option>\n                <option value=\"Malaysia\">Malaysia</option>\n                <option value=\"Maldives\">Maldives</option>\n                <option value=\"Mali\">Mali</option>\n                <option value=\"Malta\">Malta</option>\n                <option value=\"Marshall Islands\">Marshall Islands</option>\n                <option value=\"Martinique\">Martinique</option>\n                <option value=\"Mauritania\">Mauritania</option>\n                <option value=\"Mauritius\">Mauritius</option>\n                <option value=\"Mayotte\">Mayotte</option>\n                <option value=\"Mexico\">Mexico</option>\n                <option value=\"Micronesia, Federated States of\">Micronesia, Federated States of</option>\n                <option value=\"Moldova, Republic of\">Moldova, Republic of</option>\n                <option value=\"Monaco\">Monaco</option>\n                <option value=\"Mongolia\">Mongolia</option>\n                <option value=\"Montenegro\">Montenegro</option>\n                <option value=\"Montserrat\">Montserrat</option>\n                <option value=\"Morocco\">Morocco</option>\n                <option value=\"Mozambique\">Mozambique</option>\n                <option value=\"Myanmar\">Myanmar</option>\n                <option value=\"Namibia\">Namibia</option>\n                <option value=\"Nauru\">Nauru</option>\n                <option value=\"Nepal\">Nepal</option>\n                <option value=\"Netherlands\">Netherlands</option>\n                <option value=\"Netherlands Antilles\">Netherlands Antilles</option>\n                <option value=\"New Caledonia\">New Caledonia</option>\n                <option value=\"New Zealand\">New Zealand</option>\n                <option value=\"Nicaragua\">Nicaragua</option>\n                <option value=\"Niger\">Niger</option>\n                <option value=\"Nigeria\">Nigeria</option>\n                <option value=\"Niue\">Niue</option>\n                <option value=\"Norfolk Island\">Norfolk Island</option>\n                <option value=\"Northern Mariana Islands\">Northern Mariana Islands</option>\n                <option value=\"Norway\">Norway</option>\n                <option value=\"Oman\">Oman</option>\n                <option value=\"Pakistan\">Pakistan</option>\n                <option value=\"Palau\">Palau</option>\n                <option value=\"Palestinian Territory, Occupied\">Palestinian Territory, Occupied</option>\n                <option value=\"Panama\">Panama</option>\n                <option value=\"Papua New Guinea\">Papua New Guinea</option>\n                <option value=\"Paraguay\">Paraguay</option>\n                <option value=\"Peru\">Peru</option>\n                <option value=\"Philippines\">Philippines</option>\n                <option value=\"Pitcairn\">Pitcairn</option>\n                <option value=\"Poland\">Poland</option>\n                <option value=\"Portugal\">Portugal</option>\n                <option value=\"Puerto Rico\">Puerto Rico</option>\n                <option value=\"Qatar\">Qatar</option>\n                <option value=\"Reunion\">Reunion</option>\n                <option value=\"Romania\">Romania</option>\n                <option value=\"Russian Federation\">Russian Federation</option>\n                <option value=\"Rwanda\">Rwanda</option>\n                <option value=\"Saint Helena\">Saint Helena</option>\n                <option value=\"Saint Kitts and Nevis\">Saint Kitts and Nevis</option>\n                <option value=\"Saint Lucia\">Saint Lucia</option>\n                <option value=\"Saint Pierre and Miquelon\">Saint Pierre and Miquelon</option>\n                <option value=\"Saint Vincent and The Grenadines\">Saint Vincent and The Grenadines</option>\n                <option value=\"Samoa\">Samoa</option>\n                <option value=\"San Marino\">San Marino</option>\n                <option value=\"Sao Tome and Principe\">Sao Tome and Principe</option>\n                <option value=\"Saudi Arabia\">Saudi Arabia</option>\n                <option value=\"Senegal\">Senegal</option>\n                <option value=\"Serbia\">Serbia</option>\n                <option value=\"Seychelles\">Seychelles</option>\n                <option value=\"Sierra Leone\">Sierra Leone</option>\n                <option value=\"Singapore\">Singapore</option>\n                <option value=\"Slovakia\">Slovakia</option>\n                <option value=\"Slovenia\">Slovenia</option>\n                <option value=\"Solomon Islands\">Solomon Islands</option>\n                <option value=\"Somalia\">Somalia</option>\n                <option value=\"South Africa\">South Africa</option>\n                <option value=\"South Georgia and The South Sandwich Islands\">South Georgia and The South Sandwich Islands</option>\n                <option value=\"Spain\">Spain</option>\n                <option value=\"Sri Lanka\">Sri Lanka</option>\n                <option value=\"Sudan\">Sudan</option>\n                <option value=\"Suriname\">Suriname</option>\n                <option value=\"Svalbard and Jan Mayen\">Svalbard and Jan Mayen</option>\n                <option value=\"Swaziland\">Swaziland</option>\n                <option value=\"Sweden\">Sweden</option>\n                <option value=\"Switzerland\">Switzerland</option>\n                <option value=\"Syrian Arab Republic\">Syrian Arab Republic</option>\n                <option value=\"Taiwan, Province of China\">Taiwan, Province of China</option>\n                <option value=\"Tajikistan\">Tajikistan</option>\n                <option value=\"Tanzania, United Republic of\">Tanzania, United Republic of</option>\n                <option value=\"Thailand\">Thailand</option>\n                <option value=\"Timor-leste\">Timor-leste</option>\n                <option value=\"Togo\">Togo</option>\n                <option value=\"Tokelau\">Tokelau</option>\n                <option value=\"Tonga\">Tonga</option>\n                <option value=\"Trinidad and Tobago\">Trinidad and Tobago</option>\n                <option value=\"Tunisia\">Tunisia</option>\n                <option value=\"Turkey\">Turkey</option>\n                <option value=\"Turkmenistan\">Turkmenistan</option>\n                <option value=\"Turks and Caicos Islands\">Turks and Caicos Islands</option>\n                <option value=\"Tuvalu\">Tuvalu</option>\n                <option value=\"Uganda\">Uganda</option>\n                <option value=\"Ukraine\">Ukraine</option>\n                <option value=\"United Arab Emirates\">United Arab Emirates</option>\n                <option value=\"United Kingdom\">United Kingdom</option>\n                <option value=\"United States\">United States</option>\n                <option value=\"United States Minor Outlying Islands\">United States Minor Outlying Islands</option>\n                <option value=\"Uruguay\">Uruguay</option>\n                <option value=\"Uzbekistan\">Uzbekistan</option>\n                <option value=\"Vanuatu\">Vanuatu</option>\n                <option value=\"Venezuela\">Venezuela</option>\n                <option value=\"Viet Nam\">Viet Nam</option>\n                <option value=\"Virgin Islands, British\">Virgin Islands, British</option>\n                <option value=\"Virgin Islands, U.S.\">Virgin Islands, U.S.</option>\n                <option value=\"Wallis and Futuna\">Wallis and Futuna</option>\n                <option value=\"Western Sahara\">Western Sahara</option>\n                <option value=\"Yemen\">Yemen</option>\n                <option value=\"Zambia\">Zambia</option>\n                <option value=\"Zimbabwe\">Zimbabwe</option>\n            </select>\n            <div class=\"invalid-feedback\" *ngIf=\"invalid ==true&&country==null\">\n              Please provide a Country.\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"validationServer04\">Release Date</label>\n            <input type=\"text\" class=\"form-control\" name=\"release\" ngbDatepicker #d=\"ngbDatepicker\" [(ngModel)]=\"releasedate\" name=\"releasedate\" [minDate]=\"mindate\" [ngClass]=\"releasedate == null && invalid ? 'is-invalid' : '' \" (click)=\"d.toggle()\" placeholder=\"Release Date\" required>\n            <div class=\"invalid-feedback\" *ngIf=\"invalid ==true&&releasedate==null\">\n              Please provide a Release Date.\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"validationServer04\">Ticket Price</label>\n            <input type=\"number\" class=\"form-control\" name=\"ticket\" [(ngModel)]=\"ticketprice\" placeholder=\"Ticket Price\" [ngClass]=\"ticketprice == null && invalid ? 'is-invalid' : '' \" required>\n            <div class=\"invalid-feedback\" *ngIf=\"invalid ==true&&ticketprice==null\">\n              Please provide a ticket price.\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"validationServer05\">Movie Photo / Poster</label>\n            <input type=\"file\" class=\"form-control\" name=\"file\" [disabled]=\"onUpload\"  (change)=\"selectImage($event)\" [ngClass]=\"photo == null && invalid ? 'is-invalid' : '' \"  required>\n            <button class=\"btn btn-primary mt-1\" *ngIf=\"!onUpload\" (click)=\"uploadImage()\">Upload</button>\n            <button class=\"btn btn-primary mt-1\" *ngIf=\"onUpload\" [disabled]=\"true\" >Uploading..</button>\n            <div class=\"invalid-feedback\" *ngIf=\"invalid ==true&&photo==null\">\n              Please provide a Image file.\n            </div>\n            <div class=\"invalid-feedback\">\n              <p>{{uploaderror}}</p>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"validationServer05\">Description <span><small>(Minimum 200 characters)</small></span></label>\n            <textarea class=\"form-control\" name=\"description\" minlength=200 rows=\"4\" [(ngModel)]=\"description\" [ngClass]=\"description == null && invalid ? 'is-invalid' : '' \"></textarea>\n            <div class=\"invalid-feedback\" *ngIf=\"invalid ==true&&description==null\">\n              Please provide a Film Description.\n            </div>\n          </div>\n        <button class=\"btn btn-primary\" [disabled]=\"onSubmit\" type=\"submit\" (click)=\"submit()\">Submit</button>\n      </form>\n    </div>\n  </div>\n</div>\n\n","import { Component, OnInit ,Input} from '@angular/core';\nimport { FilmsService } from '../../services/films.service';\nimport { AuthService } from '../../services/auth/auth.service';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-film-view',\n  templateUrl: './film-view.component.html',\n  styleUrls: ['./film-view.component.css']\n})\nexport class FilmViewComponent implements OnInit {\n  filmid : any  = { id : 0 };\n  film : any ={\n    film_id: '',\n    name: '',\n    description: '',\n    genre : [],\n    releasedate : '',\n    ticketprice : '',\n    country : '',\n    rating : '',\n    photo : ''\n  };\n  comments: any  = [];\n  comment: any;\n  message : any;\n  isLoggedIn : boolean = false;\n  posting : boolean = false;\n\n  constructor(private films : FilmsService,\n     private authService : AuthService,\n      private route : Router,\n      private location: Location) {\n    this.filmid = this.route.getCurrentNavigation().extras.state; // collecting id from router extra parameter\n  }\n\n  ngOnInit(): void {\n    //check authentication\n    this.isLoggedIn = this.authService.loggedIn;\n    console.log('logged',this.isLoggedIn);\n    this.getFilm();\n    console.log('film',this.filmid.id);\n  }\n\n  // get film id its id\n  getFilm(){\n    this.films.getFilm(this.filmid.id).subscribe((res:any) =>{\n      console.log('res',res);\n      this.film = res.film;\n      this.film.genre = JSON.parse(this.film.genre);\n      console.log('film',this.film);\n      this.comments = res.comments;\n    })\n  }\n\n  postComment(){\n    console.log('comments',this.comment);\n    if(this.comment == null || this.comment =='') {\n      return false;\n    }\n    this.posting = true;\n    this.films.postComment(this.comment,this.film.film_id).subscribe( res =>{\n      this.posting = false;\n      if(res.status){\n        this.getComments();\n        this.comment = ''\n      }\n\n    })\n  }\n  back(){\n    this.location.back();\n  }\n  getComments(){\n    console.log('comments',this.comment);\n    if(this.comment == null){\n      return false;\n    }\n    this.films.getAllComments(this.film.film_id).subscribe( res =>{\n\n       this.comments = res.comments\n    })\n  }\n\n}\n","\n<div class=\"row m-5\">\n  <div class=\"container\">\n    <h2 class=\"text-center my-2\">Movie Details</h2>\n    <button class=\"btn btn-primary\" (click)=\"back()\">Back</button>\n    <div class=\"col-lg-12\">\n      <div class=\"text-dark\">\n          <img class=\"img-fluid p-4\" max-height=\"600px\" src=\"{{film.photo}}\" alt=\"movie image\">\n        <div class=\"p-4\">\n          <h6 class=\"\">Movie Title : {{film.name}}</h6>\n          <p class=\"\">Movie Genre : <span *ngFor=\"let genre of film.genre\" class=\"badge badge-warning\">{{genre}}</span></p>\n          <p>Movie Release Date : {{film.releasedate}}</p>\n          <p>Movie Country: {{film.country}}</p>\n          <p>Movie Rating :  {{film.rating}}</p>\n          <p class=\"mb-3\">Movie Ticket Price :  {{film.ticketprice}}</p>\n          <p>Description : {{film.description}}</p>\n          <hr class=\"my-3\">\n          <div class=\"row bootstrap snippets\">\n            <div class=\"col-lg-12 col-md-offset-2 col-sm-12\">\n                <div class=\"comment-wrapper\">\n                    <div class=\"panel panel-info\">\n                        <div class=\"panel-heading\">\n                            Comment panel\n                        </div>\n                        <div class=\"panel-body\">\n                            <textarea class=\"form-control\"  placeholder=\"write a comment...\" [(ngModel)]=\"comment\" rows=\"3\"></textarea>\n                            <br>\n                            <button type=\"button\" class=\"btn btn-info pull-right\" *ngIf=\"!posting\" (click)=\"postComment()\">Post</button>\n                            <button type=\"button\" class=\"btn btn-info pull-right\" disabled *ngIf=\"posting\">Posting</button>\n                            <div class=\"clearfix\"></div>\n                            <hr>\n                            <ul class=\"media-list\" >\n                                <li class=\"media\" *ngFor=\"let message of comments\">\n                                  <div class=\"media-body\">\n                                      <span class=\"text-muted pull-right\">\n                                          <small class=\"text-muted\">{{message.created | date}}</small>\n                                      </span>\n                                      <strong class=\"text-success\">@{{message.user_name}}</strong>\n                                      <p>\n                                          {{message.comment}}.\n                                      </p>\n                                  </div>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FilmsService } from '../services/films.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-films',\n  templateUrl: './films.component.html',\n  styleUrls: ['./films.component.css']\n})\nexport class FilmsComponent implements OnInit {\n\n  films : any[] =[{\n    name : \"\",\n    photo: \"\",\n    genre : \"\",\n    description : \"\"\n  }];\n  index:number = 0;\n\n  constructor(private filmService : FilmsService,\n     private route : Router) { }\n\n\n  ngOnInit(): void {\n    this.getAllFilms();\n    console.log('index',this.index);\n  }\n\n  getAllFilms(){\n    this.filmService.getAllFilms().subscribe( (data:any) =>{\n      console.log('data',data);\n\n      this.films = data.films;\n      this.films.forEach(element => {\n        element.genre = JSON.parse(element.genre);\n      });\n\n      console.log('fims',this.films);\n\n    })\n  }\n  getDetail(){\n    //pass an extra value as state with route navigate\n    this.route.navigate(['films/',this.films[this.index].name],{state : {id : this.films[this.index].film_id}})\n\n  }\n\n  next():any{\n    this.index++;\n    console.log('index',this.index);\n  }\n  prev():any{\n    this.index--;\n  }\n\n\n}\n","<h2 class=\"text-center mt-3\">Movie Lists</h2>\n<div class=\"row m-5\">\n  <div class=\"container\">\n    <div class=\"col-md-12\">\n      <div class=\"card bg-light text-dark\">\n        <img class=\"card-img img-fluid p-4\" src=\"{{films[index].photo}}\" alt=\"{{films[index].name}}\">\n\n        <div class=\"card-body p-4\">\n          <h6 class=\"card-title\">Movie title : {{films[index].name}}</h6>\n          <p class=\"card-title\" >Movie Genre : <span class=\"badge badge-warning mx-1\" *ngFor=\"let genre of films[index].genre\"> {{genre}} </span></p>\n\n          <p class=\"card-text\">Description :{{ (films[index].description.length>100)? (films[index].description | slice:0:100)+'...':(films[index].description) }}<small>...</small><a class=\"btn btn-primary text-light\" (click)=\"getDetail()\">&nbsp;Know More</a></p>\n\n        </div>\n        <hr>\n        <div class=\"card-button float-left\">\n          <button type=\"button\" *ngIf=\"index != 0\"  class=\"btn btn-primary text-light float-left m-3\" (click)=\"prev();\">Prev</button>\n          <button type=\"button\" *ngIf=\"index + 1 != films.length\"  class=\"btn btn-primary text-light float-left m-3\" (click)=\"next();\" >Next</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService} from '../services/auth/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  email : string;\n  password: string;\n  success : boolean = false;\n  errormessage : string;\n  onlogin : boolean = false;\n\n  constructor(private authService : AuthService, private router : Router) { }\n\n  ngOnInit(): void {\n  }\n\n  login(){\n    if(this.email == null || this.password == null ){\n      this.errormessage = \" Enter email and password\";\n      return console.error('enter email/password');\n    }\n    if(!this.validateEmail(this.email)){\n      this.errormessage = \" Email is not Valid\";\n      return console.log(this.validateEmail(this.email));\n    }\n    this.onlogin = true;\n\n    this.authService.login(this.email,this.password).subscribe( (data:any) =>{\n      this.onlogin = false;\n      console.log('data',data);\n      if(data.status){\n        this.success = true;\n        this.router.navigate(['/films']);\n      }\n      else{\n        this.errormessage = data.message;\n      }\n    })\n\n  }\n\n  validateEmail(email) {\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n\n\n}\n\n\n","<div class=\"container h-100 mt-5\">\n  <div class=\"d-flex justify-content-center h-100\">\n    <div class=\"user_card\">\n      <div class=\"d-flex justify-content-center\">\n        <h3>Films</h3>\n      </div>\n      <div class=\"d-flex justify-content-center mt-2\">\n        <h5>Login</h5>\n      </div>\n      <div class=\"d-flex justify-content-center form_container\">\n        <form >\n          <div class=\"input-group mb-3\">\n            <div class=\"input-group-append\">\n              <span class=\"input-group-text\"><i class=\"fa fa-envelope-square\"></i></span>\n            </div>\n            <input type=\"email\" name=\"email\" [(ngModel)]= \"email\" class=\"form-control input_user\" value=\"\" placeholder=\"email\">\n          </div>\n          <div class=\"input-group mb-2\">\n            <div class=\"input-group-append\">\n              <span class=\"input-group-text\"><i class=\"fa fa-key\"></i></span>\n            </div>\n            <input type=\"password\" name=\"password\" [(ngModel)]= \"password\" class=\"form-control input_pass\" value=\"\" placeholder=\"password\">\n          </div>\n          <div class=\"form-group\">\n            <div class=\"custom-control custom-checkbox\">\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"customControlInline\">\n              <label class=\"custom-control-label\" for=\"customControlInline\">Remember me</label>\n            </div>\n          </div>\n            <div class=\"d-flex justify-content-center mt-3 login_container\">\n         <button type=\"submit\" name=\"signin\" [disabled]=\"onlogin\" class=\"btn login_btn\" (click) =\"login()\">Login</button>\n         </div>\n         <p class=\"text-danger text-center\"> {{errormessage}} </p>\n        </form>\n      </div>\n\n      <div class=\"mt-4\">\n        <div class=\"d-flex justify-content-center links\">\n          Don't have an account? <a routerLink=\"/register\" class=\"ml-2\">Sign Up</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService} from '../services/auth/auth.service';\nimport { error } from '@angular/compiler/src/util';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  name:string;\n  email:string;\n  password:string;\n  success:boolean =false;\n  onregister : boolean = false;\n  errormessage : string = '';\n\n\n  constructor(private authService : AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n  register(){\n    this.errormessage = \"\"\n    if(this.name == '' || this.email == '' || this.password == ''){\n      console.log('error')\n      this.errormessage = \" All fields are Required\"\n      return false;\n    }\n    this.onregister = true;\n    let user = {\n      'name' : this.name,\n      'email' : this.email,\n      'password' : this.password\n    }\n    this.authService.register(user).subscribe(data => {\n      this.onregister = false;\n      if(data.status){\n        this.success = true;\n        this.name = '';\n        this.email = '';\n        this.password = '';\n      }\n      else{\n        this.errormessage = data.message;\n      }\n    })\n\n  }\n\n}\n","<div class=\"container h-100 mt-5\">\n  <div class=\"d-flex justify-content-center h-100\">\n    <div class=\"user_card\">\n      <div class=\"d-flex justify-content-center\">\n        <h3>Films</h3>\n      </div>\n      <div class=\"d-flex justify-content-center mt-2\">\n        <h5>Register</h5>\n      </div>\n      <div class=\"d-flex justify-content-center form_container\">\n        <form >\n          <div class=\"input-group mb-3\">\n            <div class=\"input-group-append\">\n              <span class=\"input-group-text\"><i class=\"fa fa-user\"></i></span>\n            </div>\n            <input type=\"text\" name=\"name\" [(ngModel)]=\"name\" class=\"form-control input_user\" value=\"\" placeholder=\"name\">\n          </div>\n          <div class=\"input-group mb-3\">\n            <div class=\"input-group-append\">\n              <span class=\"input-group-text\"><i class=\"fa fa-envelope-square\"></i></span>\n            </div>\n            <input type=\"email\" name=\"email\" [(ngModel)]=\"email\" class=\"form-control input_user\" value=\"\" placeholder=\"email\">\n          </div>\n          <div class=\"input-group mb-3\">\n            <div class=\"input-group-append\">\n              <span class=\"input-group-text\"><i class=\"fa fa-key\"></i></span>\n            </div>\n            <input type=\"password\" name=\"password\" [(ngModel)]=\"password\" class=\"form-control input_pass\" value=\"\" placeholder=\"password\">\n          </div>\n\n            <div class=\"d-flex justify-content-center mt-3 login_container\">\n         <button type=\"submit\" name=\"signup\" class=\"btn login_btn\" (click)= \"register()\">Sign Up</button>\n         </div>\n         <p class=\"text-success\" *ngIf=\"success\">Registered Successfully</p>\n         <p class=\"text-danger\" >{{errormessage}}</p>\n        </form>\n      </div>\n\n      <div class=\"mt-4\">\n        <div class=\"d-flex justify-content-center links\">\n          Already have an account? <a routerLink=\"/login\" class=\"ml-2\">Sign In</a>\n        </div>\n        <!-- <div class=\"d-flex justify-content-center links\">\n          <a href=\"#\">Forgot your password?</a>\n        </div> -->\n      </div>\n    </div>\n  </div>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { Router} from '@angular/router'\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { ApiUrl} from '../../app.constant';\n\n@Injectable()\nexport class AuthService {\n\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n  currentUser = {};\n  constructor(private http: HttpClient,private route:Router) { }\n\n  login(email: string, password: string): Observable<boolean> {\n    return this.http.post<{access_token: string;success:boolean}>(ApiUrl + 'auth/login', {email: email, password: password})\n      .pipe(\n        map((result:any) => {\n          if(result.status){\n            localStorage.setItem('access_token', result.access_token);\n          }\n          return result;\n        })\n      );\n  }\n\n  logout() {\n    localStorage.removeItem('access_token');\n  }\n\n  register(user: any): Observable<any>{\n    console.log('data',user);\n    return this.http.post<{status: boolean}>(ApiUrl + 'auth/register',user)\n    .pipe(\n      map(result => {\n\n          return result;\n\n      })\n    );\n  }\n\n  getToken() {\n    return localStorage.getItem('access_token');\n  }\n\n  get isLoggedIn(): boolean {\n    let authToken = localStorage.getItem('access_token');\n    return (authToken !== null) ? true : false;\n  }\n\n  getUserProfile(id): Observable<any> {\n    let api = `${ApiUrl}/user-profile/${id}`;\n    return this.http.get(api, { headers: this.headers }).pipe(\n      map((res: Response) => {\n        return res || {}\n      }),\n      catchError(this.handleError)\n    )\n  }\n\n  handleError(error: HttpErrorResponse) {\n    let msg = '';\n    if (error.error instanceof ErrorEvent) {\n      // client-side error\n      msg = error.error.message;\n    } else {\n      // server-side error\n      msg = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(msg);\n  }\n\n  public get loggedIn(): boolean {\n    return (localStorage.getItem('access_token') !== null);\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ApiUrl} from '.././app.constant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilmsService {\n\n  constructor(private http: HttpClient) { }\n\n  createFilm(film : any){\n    return this.http.post<{file: string;success:boolean}>(ApiUrl + 'films/create', film)\n      .pipe(\n        map((result:any) => {\n          console.log('result',result)\n          if(result.success){\n            return true;\n          }\n        })\n      );\n  }\n\n  getAllFilms(){\n    return this.http.post<{result:any}>(ApiUrl + 'films/getAllfilms',{})\n      .pipe(\n        map((result:any) => {\n          return result;\n        })\n      );\n  }\n\n  getFilm(id : any){\n    return this.http.post<{file: string;success:boolean}>(ApiUrl + 'films/getfilm',{id : id})\n      .pipe(\n        map((result:any) => {\n          return result;\n        })\n      );\n  }\n\n  postComment(comment,filmid){\n    return this.http.post<{file: string;success:boolean}>(ApiUrl + 'films/comment',{comment,filmid})\n      .pipe(\n        map((result:any) => {\n          return result;\n        })\n      );\n  }\n\n  getAllComments(film_id){\n    return this.http.post<{result:any}>(ApiUrl + 'comments/getAllcomments',{film_id})\n      .pipe(\n        map((result:any) => {\n          return result;\n        })\n      );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router} from '@angular/router'\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { ApiUrl} from '.././app.constant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadService {\n\n  constructor(private http: HttpClient,private route:Router) { }\n\n  upload(file) {\n    const formData = new FormData();\n    formData.append('file', file);\n    return this.http.post<{file: string;success:boolean}>(ApiUrl + 'uploadImage', formData)\n      .pipe(\n        map((result:any) => {\n          console.log('result',result)\n          if(result.success){\n\n            // localStorage.setItem('access_token', result.access_token);\n            return result;\n          }\n        })\n      );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Footer -->\n<footer class=\"page-footer font-small dark\">\n\n  <!-- Copyright -->\n  <div class=\"mini-footer\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"copyright-text\">\n            <p>© 2018\n              <a href=\"#\">Films</a>. All rights reserved. Created by\n              <a href=\"#\">Shafaz</a>\n            </p>\n          </div>\n\n          <div class=\"go_top\">\n            <span class=\"icon-arrow-up\"></span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- Copyright -->\n\n</footer>\n<!-- Footer -->\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"bs-example\" >\n  <nav class=\"navbar navbar-expand-md navbar-dark bg-dark\">\n    <a  class=\"navbar-brand\" routerLink=\"/films\">Films</a>\n    <button type=\"button\" class=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div class=\"collapse navbar-collapse justify-content-between\" id=\"navbarCollapse\">\n        <div class=\"navbar-nav\">\n            <a class=\"nav-item nav-link active\" routerLink=\"/films\">Home</a>\n            <!-- <a class=\"nav-item nav-link\" >Create Films</a> -->\n            <!-- <div class=\"nav-item dropdown\">\n                <a href=\"#\" class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\">Messages</a>\n                <div class=\"dropdown-menu\">\n                    <a href=\"#\" class=\"dropdown-item\">Inbox</a>\n                    <a href=\"#\" class=\"dropdown-item\">Sent</a>\n                    <a href=\"#\" class=\"dropdown-item\">Drafts</a>\n                </div>\n            </div> -->\n        </div>\n        <form class=\"form-inline\">\n            <div class=\"input-group\">\n                <!-- <input type=\"text\" class=\"form-control\" placeholder=\"Search\"> -->\n                <div class=\"input-group-append\">\n                    <button type=\"button\" class=\"btn btn-secondary\" routerLink = 'films/create'><i class=\"fa fa-pencil\"></i> Create New Film</button>\n                </div>\n            </div>\n        </form>\n        <div class=\"navbar-nav\">\n            <a routerLink=\"/login\" class=\"nav-item nav-link\">Login</a>\n        </div>\n    </div>\n  </nav>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}