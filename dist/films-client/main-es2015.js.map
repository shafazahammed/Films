{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.constant.ts","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/auth.interceptor.ts","./src/app/films/create/create.component.ts","./src/app/films/create/create.component.html","./src/app/films/film-view/film-view.component.ts","./src/app/films/film-view/film-view.component.html","./src/app/films/films.component.ts","./src/app/films/films.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/services/auth/auth.service.ts","./src/app/services/films.service.ts","./src/app/services/upload.service.ts","./src/app/shared/footer/footer.component.ts","./src/app/shared/footer/footer.component.html","./src/app/shared/navbar/navbar.component.ts","./src/app/shared/navbar/navbar.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport {LoginComponent} from './login/login.component';\nimport { RegisterComponent } from  './register/register.component';\nimport { FilmsComponent } from  './films/films.component';\nimport { FilmViewComponent } from  './films/film-view/film-view.component';\nimport { CreateComponent } from  './films/create/create.component';\n\n\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'films', pathMatch: 'full' },\n  { path: 'films', component: FilmsComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component : RegisterComponent},\n  { path: 'films/create', component : CreateComponent},\n  { path: 'films/:flim_slug_name', component : FilmViewComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'films-client';\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n<!-- <app-footer></app-footer> -->\n","export const ApiUrl = 'http://localhost:3000/api/'; // api path to server\nexport const filepath =\"http://localhost:3000/\"; //  uploaded file path to server\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport { HttpClient,HttpClientModule,HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\n\nimport { AuthService } from './services/auth/auth.service';\nimport { AuthGuard } from './auth.guard';\nimport { AuthInterceptor } from './auth.interceptor';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { NavbarComponent } from './shared/navbar/navbar.component';\nimport { FooterComponent } from './shared/footer/footer.component';\nimport { FilmsComponent } from './films/films.component';\nimport { FilmViewComponent } from './films/film-view/film-view.component';\nimport { CreateComponent } from './films/create/create.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    NavbarComponent,\n    FooterComponent,\n    FilmsComponent,\n    FilmViewComponent,\n    CreateComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    NgbModule,\n    NgMultiSelectDropDownModule.forRoot(),\n    CommonModule,\n    AppRoutingModule\n  ],\n  providers: [\n    HttpClient,\n    AuthService,\n    AuthGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthService } from './services/auth/auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(public authService: AuthService,private router: Router) { }\n\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this.authService.isLoggedIn == true) {\n      return true;\n    }\n\n    this.router.navigate(['login']);\n    return false;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpInterceptor, HttpRequest, HttpHandler } from \"@angular/common/http\";\nimport { AuthService } from \"./services/auth/auth.service\";\n\n@Injectable()\n\nexport class AuthInterceptor implements HttpInterceptor {\n    constructor(private authService: AuthService) { }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\n        const authToken = this.authService.getToken();\n        req = req.clone({\n            setHeaders: {\n                Authorization: \"Bearer \" + authToken\n            }\n        });\n        return next.handle(req);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { UploadService } from '../../services/upload.service';\nimport { FilmsService } from '../../services/films.service';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport { filepath }  from '../../app.constant';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n\n  name:string;\n  description: string;\n  country:string;\n  releasedate: any;\n  rating:number;\n  ticketprice:number;\n  genre: any = [];\n  photo : string;\n  image : string;\n  invalid:boolean = false;\n  invalidphoto : boolean = false;\n  success : boolean = false ;\n  onUpload :boolean = false;\n  onSubmit :boolean = false;\n  dropdownList = ['Action','Thriller','Horror', 'Comedy','Drama', 'Romance', 'Sci-Fi', 'Adventure'];\n  dropdownSettings : IDropdownSettings = {\n    singleSelection: false,\n    itemsShowLimit: 10,\n    allowSearchFilter: true\n  };\n  mindate;\n  uploaderror:string;\n\n\n  constructor(private films : FilmsService, private Upload : UploadService) { }\n\n  ngOnInit(): void {\n    let today= new Date();\n    this.mindate = {year : today.getFullYear(),month: today.getMonth()+1, day: today.getDate()}\n  }\n\n  submit(){\n    console.log('name',this.name);\n    console.log('desc',this.description);\n    console.log('name',this.country);\n    console.log('release',this.releasedate);\n    console.log('reating',this.rating);\n    console.log('ticket',this.ticketprice);\n    console.log('genre',this.genre);\n    console.log('image',this.image);\n    if(this.name == null || this.description == null || this.country== null || this.releasedate==null || this.rating ==null|| this.ticketprice == null || this.genre == []|| this.image == null){\n      console.log('error');\n      return this.invalid = true;\n    }\n\n    this.releasedate = this.releasedate.year+'-'+this.releasedate.month+'-'+this.releasedate.day;\n\n    let film = {\n      name : this.name,\n      description : this.description,\n      country : this.country,\n      releasedate : this.releasedate,\n      ticketprice : this.ticketprice,\n      rating : this.rating,\n      genre : this.genre,\n      photo : this.image\n    }\n\n    console.log('film',film);\n\n    this.onSubmit = true;\n\n    this.films.createFilm(film).subscribe(res =>{\n      this.onSubmit = false;\n      // this.image = \"\";\n\n    })\n\n\n  }\n\n  uploadImage(){\n    if(this.photo == null){\n      return this.invalid = true;\n    }\n    this.onUpload = true;\n    this.Upload.upload(this.photo).subscribe( (res:any) =>{\n      if(res.success){\n        res.file = res.file.replace('/public','');\n        this.image = filepath + res.file;\n        console.log('image',this.image);\n      }\n      else{\n        this.uploaderror = res.message;\n      }\n      this.onUpload = false;\n      console.log('upload',this.onUpload);\n    },\n    err =>{\n      this.onUpload = false;\n    })\n\n  }\n\n  selectImage(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.photo = file;\n    }\n    console.log('file',this.photo);\n  }\n\n  onItemSelect(item) {\n    console.log(item);\n    this.genre.push(item);\n    this.genre = this.genre.filter(function(elem, index, self) {\n      return index === self.indexOf(elem);\n    })\n\n  }\n  onSelectAll(items: any) {\n    this.genre.push(items);\n    this.genre = this.genre.filter(function(elem, index, self) {\n      return index === self.indexOf(elem);\n    })\n  }\n\n}\n","<div class=\"row mt-5\">\n  <div class=\"container\">\n    <div class=\"col-md-8 item\">\n      <h3 class=\"text-center my-3\">Create a New Film</h3>\n      <form>\n          <div class=\"form-group\">\n            <label for=\"exampleFormControlInput1\">Film name</label>\n            <input type=\"text\" class=\"form-control\" name=\"name\" [(ngModel)]=\"name\" [ngClass]=\"name == null && invalid ? 'is-invalid' : '' \" id=\"exampleFormControlInput1\" placeholder=\"Film name\" required>\n            <div class=\"invalid-feedback\">\n              Provide a Movie Name\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label>Film Genre</label>\n            <ng-multiselect-dropdown\n              [ngClass]=\"genre == null && invalid ? 'is-invalid' : '' \"\n              name = \"genre\"\n              [placeholder]=\"'Select Movie Genre'\"\n              [data]=\"dropdownList\"\n              [(ngModel)]=\"genre\"\n              [settings]=\"dropdownSettings\"\n              (onSelect)=\"onItemSelect($event)\"\n            >\n          </ng-multiselect-dropdown>\n              <div class=\"invalid-feedback\" *ngIf=\"invalid ==true&&genre==null\">\n              Select Film Genre\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"validationServerUsername\">Movie Rating</label>\n              <select class=\"form-control\" name=\"rating\" [ngClass]=\"(rating==null&&invalid==true)? 'is-invalid': ''\" name=\"rating\" [(ngModel)]= \"rating\" required>\n                <option disabled selected>Enter Movie rating</option>\n                <option>1</option>\n                <option>2</option>\n                <option>3</option>\n                <option>4</option>\n                <option>5</option>\n              </select>\n              <div class=\"invalid-feedback\" *ngIf=\"invalid ==true&&rating==null\">\n                Please Select a Rating.\n              </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"validationServer03\">Country</label>\n            <select name=\"country\" class=\"form-control\" name=\"country\" [ngClass]=\"(country==null&&invalid==true)? 'is-invalid': ''\"  [(ngModel)]=\"country\" required>\n              <option disabled selected>Select Country</option>\n                <option value=\"Afghanistan\">Afghanistan</option>\n                <option value=\"Åland Islands\">Åland Islands</option>\n                <option value=\"Albania\">Albania</option>\n                <option value=\"Algeria\">Algeria</option>\n                <option value=\"American Samoa\">American Samoa</option>\n                <option value=\"Andorra\">Andorra</option>\n                <option value=\"Angola\">Angola</option>\n                <option value=\"Anguilla\">Anguilla</option>\n                <option value=\"Antarctica\">Antarctica</option>\n                <option value=\"Antigua and Barbuda\">Antigua and Barbuda</option>\n                <option value=\"Argentina\">Argentina</option>\n                <option value=\"Armenia\">Armenia</option>\n                <option value=\"Aruba\">Aruba</option>\n                <option value=\"Australia\">Australia</option>\n                <option value=\"Austria\">Austria</option>\n                <option value=\"Azerbaijan\">Azerbaijan</option>\n                <option value=\"Bahamas\">Bahamas</option>\n                <option value=\"Bahrain\">Bahrain</option>\n                <option value=\"Bangladesh\">Bangladesh</option>\n                <option value=\"Barbados\">Barbados</option>\n                <option value=\"Belarus\">Belarus</option>\n                <option value=\"Belgium\">Belgium</option>\n                <option value=\"Belize\">Belize</option>\n                <option value=\"Benin\">Benin</option>\n                <option value=\"Bermuda\">Bermuda</option>\n                <option value=\"Bhutan\">Bhutan</option>\n                <option value=\"Bolivia\">Bolivia</option>\n                <option value=\"Bosnia and Herzegovina\">Bosnia and Herzegovina</option>\n                <option value=\"Botswana\">Botswana</option>\n                <option value=\"Bouvet Island\">Bouvet Island</option>\n                <option value=\"Brazil\">Brazil</option>\n                <option value=\"British Indian Ocean Territory\">British Indian Ocean Territory</option>\n                <option value=\"Brunei Darussalam\">Brunei Darussalam</option>\n                <option value=\"Bulgaria\">Bulgaria</option>\n                <option value=\"Burkina Faso\">Burkina Faso</option>\n                <option value=\"Burundi\">Burundi</option>\n                <option value=\"Cambodia\">Cambodia</option>\n                <option value=\"Cameroon\">Cameroon</option>\n                <option value=\"Canada\">Canada</option>\n                <option value=\"Cape Verde\">Cape Verde</option>\n                <option value=\"Cayman Islands\">Cayman Islands</option>\n                <option value=\"Central African Republic\">Central African Republic</option>\n                <option value=\"Chad\">Chad</option>\n                <option value=\"Chile\">Chile</option>\n                <option value=\"China\">China</option>\n                <option value=\"Christmas Island\">Christmas Island</option>\n                <option value=\"Cocos (Keeling) Islands\">Cocos (Keeling) Islands</option>\n                <option value=\"Colombia\">Colombia</option>\n                <option value=\"Comoros\">Comoros</option>\n                <option value=\"Congo\">Congo</option>\n                <option value=\"Congo, The Democratic Republic of The\">Congo, The Democratic Republic of The</option>\n                <option value=\"Cook Islands\">Cook Islands</option>\n                <option value=\"Costa Rica\">Costa Rica</option>\n                <option value=\"Cote D'ivoire\">Cote D'ivoire</option>\n                <option value=\"Croatia\">Croatia</option>\n                <option value=\"Cuba\">Cuba</option>\n                <option value=\"Cyprus\">Cyprus</option>\n                <option value=\"Czech Republic\">Czech Republic</option>\n                <option value=\"Denmark\">Denmark</option>\n                <option value=\"Djibouti\">Djibouti</option>\n                <option value=\"Dominica\">Dominica</option>\n                <option value=\"Dominican Republic\">Dominican Republic</option>\n                <option value=\"Ecuador\">Ecuador</option>\n                <option value=\"Egypt\">Egypt</option>\n                <option value=\"El Salvador\">El Salvador</option>\n                <option value=\"Equatorial Guinea\">Equatorial Guinea</option>\n                <option value=\"Eritrea\">Eritrea</option>\n                <option value=\"Estonia\">Estonia</option>\n                <option value=\"Ethiopia\">Ethiopia</option>\n                <option value=\"Falkland Islands (Malvinas)\">Falkland Islands (Malvinas)</option>\n                <option value=\"Faroe Islands\">Faroe Islands</option>\n                <option value=\"Fiji\">Fiji</option>\n                <option value=\"Finland\">Finland</option>\n                <option value=\"France\">France</option>\n                <option value=\"French Guiana\">French Guiana</option>\n                <option value=\"French Polynesia\">French Polynesia</option>\n                <option value=\"French Southern Territories\">French Southern Territories</option>\n                <option value=\"Gabon\">Gabon</option>\n                <option value=\"Gambia\">Gambia</option>\n                <option value=\"Georgia\">Georgia</option>\n                <option value=\"Germany\">Germany</option>\n                <option value=\"Ghana\">Ghana</option>\n                <option value=\"Gibraltar\">Gibraltar</option>\n                <option value=\"Greece\">Greece</option>\n                <option value=\"Greenland\">Greenland</option>\n                <option value=\"Grenada\">Grenada</option>\n                <option value=\"Guadeloupe\">Guadeloupe</option>\n                <option value=\"Guam\">Guam</option>\n                <option value=\"Guatemala\">Guatemala</option>\n                <option value=\"Guernsey\">Guernsey</option>\n                <option value=\"Guinea\">Guinea</option>\n                <option value=\"Guinea-bissau\">Guinea-bissau</option>\n                <option value=\"Guyana\">Guyana</option>\n                <option value=\"Haiti\">Haiti</option>\n                <option value=\"Heard Island and Mcdonald Islands\">Heard Island and Mcdonald Islands</option>\n                <option value=\"Holy See (Vatican City State)\">Holy See (Vatican City State)</option>\n                <option value=\"Honduras\">Honduras</option>\n                <option value=\"Hong Kong\">Hong Kong</option>\n                <option value=\"Hungary\">Hungary</option>\n                <option value=\"Iceland\">Iceland</option>\n                <option value=\"India\">India</option>\n                <option value=\"Indonesia\">Indonesia</option>\n                <option value=\"Iran, Islamic Republic of\">Iran, Islamic Republic of</option>\n                <option value=\"Iraq\">Iraq</option>\n                <option value=\"Ireland\">Ireland</option>\n                <option value=\"Isle of Man\">Isle of Man</option>\n                <option value=\"Israel\">Israel</option>\n                <option value=\"Italy\">Italy</option>\n                <option value=\"Jamaica\">Jamaica</option>\n                <option value=\"Japan\">Japan</option>\n                <option value=\"Jersey\">Jersey</option>\n                <option value=\"Jordan\">Jordan</option>\n                <option value=\"Kazakhstan\">Kazakhstan</option>\n                <option value=\"Kenya\">Kenya</option>\n                <option value=\"Kiribati\">Kiribati</option>\n                <option value=\"Korea, Democratic People's Republic of\">Korea, Democratic People's Republic of</option>\n                <option value=\"Korea, Republic of\">Korea, Republic of</option>\n                <option value=\"Kuwait\">Kuwait</option>\n                <option value=\"Kyrgyzstan\">Kyrgyzstan</option>\n                <option value=\"Lao People's Democratic Republic\">Lao People's Democratic Republic</option>\n                <option value=\"Latvia\">Latvia</option>\n                <option value=\"Lebanon\">Lebanon</option>\n                <option value=\"Lesotho\">Lesotho</option>\n                <option value=\"Liberia\">Liberia</option>\n                <option value=\"Libyan Arab Jamahiriya\">Libyan Arab Jamahiriya</option>\n                <option value=\"Liechtenstein\">Liechtenstein</option>\n                <option value=\"Lithuania\">Lithuania</option>\n                <option value=\"Luxembourg\">Luxembourg</option>\n                <option value=\"Macao\">Macao</option>\n                <option value=\"Macedonia, The Former Yugoslav Republic of\">Macedonia, The Former Yugoslav Republic of</option>\n                <option value=\"Madagascar\">Madagascar</option>\n                <option value=\"Malawi\">Malawi</option>\n                <option value=\"Malaysia\">Malaysia</option>\n                <option value=\"Maldives\">Maldives</option>\n                <option value=\"Mali\">Mali</option>\n                <option value=\"Malta\">Malta</option>\n                <option value=\"Marshall Islands\">Marshall Islands</option>\n                <option value=\"Martinique\">Martinique</option>\n                <option value=\"Mauritania\">Mauritania</option>\n                <option value=\"Mauritius\">Mauritius</option>\n                <option value=\"Mayotte\">Mayotte</option>\n                <option value=\"Mexico\">Mexico</option>\n                <option value=\"Micronesia, Federated States of\">Micronesia, Federated States of</option>\n                <option value=\"Moldova, Republic of\">Moldova, Republic of</option>\n                <option value=\"Monaco\">Monaco</option>\n                <option value=\"Mongolia\">Mongolia</option>\n                <option value=\"Montenegro\">Montenegro</option>\n                <option value=\"Montserrat\">Montserrat</option>\n                <option value=\"Morocco\">Morocco</option>\n                <option value=\"Mozambique\">Mozambique</option>\n                <option value=\"Myanmar\">Myanmar</option>\n                <option value=\"Namibia\">Namibia</option>\n                <option value=\"Nauru\">Nauru</option>\n                <option value=\"Nepal\">Nepal</option>\n                <option value=\"Netherlands\">Netherlands</option>\n                <option value=\"Netherlands Antilles\">Netherlands Antilles</option>\n                <option value=\"New Caledonia\">New Caledonia</option>\n                <option value=\"New Zealand\">New Zealand</option>\n                <option value=\"Nicaragua\">Nicaragua</option>\n                <option value=\"Niger\">Niger</option>\n                <option value=\"Nigeria\">Nigeria</option>\n                <option value=\"Niue\">Niue</option>\n                <option value=\"Norfolk Island\">Norfolk Island</option>\n                <option value=\"Northern Mariana Islands\">Northern Mariana Islands</option>\n                <option value=\"Norway\">Norway</option>\n                <option value=\"Oman\">Oman</option>\n                <option value=\"Pakistan\">Pakistan</option>\n                <option value=\"Palau\">Palau</option>\n                <option value=\"Palestinian Territory, Occupied\">Palestinian Territory, Occupied</option>\n                <option value=\"Panama\">Panama</option>\n                <option value=\"Papua New Guinea\">Papua New Guinea</option>\n                <option value=\"Paraguay\">Paraguay</option>\n                <option value=\"Peru\">Peru</option>\n                <option value=\"Philippines\">Philippines</option>\n                <option value=\"Pitcairn\">Pitcairn</option>\n                <option value=\"Poland\">Poland</option>\n                <option value=\"Portugal\">Portugal</option>\n                <option value=\"Puerto Rico\">Puerto Rico</option>\n                <option value=\"Qatar\">Qatar</option>\n                <option value=\"Reunion\">Reunion</option>\n                <option value=\"Romania\">Romania</option>\n                <option value=\"Russian Federation\">Russian Federation</option>\n                <option value=\"Rwanda\">Rwanda</option>\n                <option value=\"Saint Helena\">Saint Helena</option>\n                <option value=\"Saint Kitts and Nevis\">Saint Kitts and Nevis</option>\n                <option value=\"Saint Lucia\">Saint Lucia</option>\n                <option value=\"Saint Pierre and Miquelon\">Saint Pierre and Miquelon</option>\n                <option value=\"Saint Vincent and The Grenadines\">Saint Vincent and The Grenadines</option>\n                <option value=\"Samoa\">Samoa</option>\n                <option value=\"San Marino\">San Marino</option>\n                <option value=\"Sao Tome and Principe\">Sao Tome and Principe</option>\n                <option value=\"Saudi Arabia\">Saudi Arabia</option>\n                <option value=\"Senegal\">Senegal</option>\n                <option value=\"Serbia\">Serbia</option>\n                <option value=\"Seychelles\">Seychelles</option>\n                <option value=\"Sierra Leone\">Sierra Leone</option>\n                <option value=\"Singapore\">Singapore</option>\n                <option value=\"Slovakia\">Slovakia</option>\n                <option value=\"Slovenia\">Slovenia</option>\n                <option value=\"Solomon Islands\">Solomon Islands</option>\n                <option value=\"Somalia\">Somalia</option>\n                <option value=\"South Africa\">South Africa</option>\n                <option value=\"South Georgia and The South Sandwich Islands\">South Georgia and The South Sandwich Islands</option>\n                <option value=\"Spain\">Spain</option>\n                <option value=\"Sri Lanka\">Sri Lanka</option>\n                <option value=\"Sudan\">Sudan</option>\n                <option value=\"Suriname\">Suriname</option>\n                <option value=\"Svalbard and Jan Mayen\">Svalbard and Jan Mayen</option>\n                <option value=\"Swaziland\">Swaziland</option>\n                <option value=\"Sweden\">Sweden</option>\n                <option value=\"Switzerland\">Switzerland</option>\n                <option value=\"Syrian Arab Republic\">Syrian Arab Republic</option>\n                <option value=\"Taiwan, Province of China\">Taiwan, Province of China</option>\n                <option value=\"Tajikistan\">Tajikistan</option>\n                <option value=\"Tanzania, United Republic of\">Tanzania, United Republic of</option>\n                <option value=\"Thailand\">Thailand</option>\n                <option value=\"Timor-leste\">Timor-leste</option>\n                <option value=\"Togo\">Togo</option>\n                <option value=\"Tokelau\">Tokelau</option>\n                <option value=\"Tonga\">Tonga</option>\n                <option value=\"Trinidad and Tobago\">Trinidad and Tobago</option>\n                <option value=\"Tunisia\">Tunisia</option>\n                <option value=\"Turkey\">Turkey</option>\n                <option value=\"Turkmenistan\">Turkmenistan</option>\n                <option value=\"Turks and Caicos Islands\">Turks and Caicos Islands</option>\n                <option value=\"Tuvalu\">Tuvalu</option>\n                <option value=\"Uganda\">Uganda</option>\n                <option value=\"Ukraine\">Ukraine</option>\n                <option value=\"United Arab Emirates\">United Arab Emirates</option>\n                <option value=\"United Kingdom\">United Kingdom</option>\n                <option value=\"United States\">United States</option>\n                <option value=\"United States Minor Outlying Islands\">United States Minor Outlying Islands</option>\n                <option value=\"Uruguay\">Uruguay</option>\n                <option value=\"Uzbekistan\">Uzbekistan</option>\n                <option value=\"Vanuatu\">Vanuatu</option>\n                <option value=\"Venezuela\">Venezuela</option>\n                <option value=\"Viet Nam\">Viet Nam</option>\n                <option value=\"Virgin Islands, British\">Virgin Islands, British</option>\n                <option value=\"Virgin Islands, U.S.\">Virgin Islands, U.S.</option>\n                <option value=\"Wallis and Futuna\">Wallis and Futuna</option>\n                <option value=\"Western Sahara\">Western Sahara</option>\n                <option value=\"Yemen\">Yemen</option>\n                <option value=\"Zambia\">Zambia</option>\n                <option value=\"Zimbabwe\">Zimbabwe</option>\n            </select>\n            <div class=\"invalid-feedback\" *ngIf=\"invalid ==true&&country==null\">\n              Please provide a Country.\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"validationServer04\">Release Date</label>\n            <input type=\"text\" class=\"form-control\" name=\"release\" ngbDatepicker #d=\"ngbDatepicker\" [(ngModel)]=\"releasedate\" name=\"releasedate\" [minDate]=\"mindate\" [ngClass]=\"releasedate == null && invalid ? 'is-invalid' : '' \" (click)=\"d.toggle()\" placeholder=\"Release Date\" required>\n            <div class=\"invalid-feedback\" *ngIf=\"invalid ==true&&releasedate==null\">\n              Please provide a Release Date.\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"validationServer04\">Ticket Price</label>\n            <input type=\"number\" class=\"form-control\" name=\"ticket\" [(ngModel)]=\"ticketprice\" placeholder=\"Ticket Price\" [ngClass]=\"ticketprice == null && invalid ? 'is-invalid' : '' \" required>\n            <div class=\"invalid-feedback\" *ngIf=\"invalid ==true&&ticketprice==null\">\n              Please provide a ticket price.\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"validationServer05\">Movie Photo / Poster</label>\n            <input type=\"file\" class=\"form-control\" name=\"file\" [disabled]=\"onUpload\"  (change)=\"selectImage($event)\" [ngClass]=\"photo == null && invalid ? 'is-invalid' : '' \"  required>\n            <button class=\"btn btn-primary mt-1\" *ngIf=\"!onUpload\" (click)=\"uploadImage()\">Upload</button>\n            <button class=\"btn btn-primary mt-1\" *ngIf=\"onUpload\" [disabled]=\"true\" >Uploading..</button>\n            <div class=\"invalid-feedback\" *ngIf=\"invalid ==true&&photo==null\">\n              Please provide a Image file.\n            </div>\n            <div class=\"invalid-feedback\">\n              <p>{{uploaderror}}</p>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"validationServer05\">Description <span><small>(Minimum 200 characters)</small></span></label>\n            <textarea class=\"form-control\" name=\"description\" minlength=200 rows=\"4\" [(ngModel)]=\"description\" [ngClass]=\"description == null && invalid ? 'is-invalid' : '' \"></textarea>\n            <div class=\"invalid-feedback\" *ngIf=\"invalid ==true&&description==null\">\n              Please provide a Film Description.\n            </div>\n          </div>\n        <button class=\"btn btn-primary\" [disabled]=\"onSubmit\" type=\"submit\" (click)=\"submit()\">Submit</button>\n      </form>\n    </div>\n  </div>\n</div>\n\n","import { Component, OnInit ,Input} from '@angular/core';\nimport { FilmsService } from '../../services/films.service';\nimport { AuthService } from '../../services/auth/auth.service';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-film-view',\n  templateUrl: './film-view.component.html',\n  styleUrls: ['./film-view.component.css']\n})\nexport class FilmViewComponent implements OnInit {\n  filmid : any  = { id : 0 };\n  film : any ={\n    film_id: '',\n    name: '',\n    description: '',\n    genre : [],\n    releasedate : '',\n    ticketprice : '',\n    country : '',\n    rating : '',\n    photo : ''\n  };\n  comments: any  = [];\n  comment: any;\n  message : any;\n  isLoggedIn : boolean = false;\n  posting : boolean = false;\n\n  constructor(private films : FilmsService,\n     private authService : AuthService,\n      private route : Router,\n      private location: Location) {\n    this.filmid = this.route.getCurrentNavigation().extras.state; // collecting id from router extra parameter\n  }\n\n  ngOnInit(): void {\n    //check authentication\n    this.isLoggedIn = this.authService.loggedIn;\n    console.log('logged',this.isLoggedIn);\n    this.getFilm();\n    console.log('film',this.filmid.id);\n  }\n\n  // get film id its id\n  getFilm(){\n    this.films.getFilm(this.filmid.id).subscribe((res:any) =>{\n      console.log('res',res);\n      this.film = res.film;\n      this.film.genre = JSON.parse(this.film.genre);\n      console.log('film',this.film);\n      this.comments = res.comments;\n    })\n  }\n\n  postComment(){\n    console.log('comments',this.comment);\n    if(this.comment == null || this.comment =='') {\n      return false;\n    }\n    this.posting = true;\n    this.films.postComment(this.comment,this.film.film_id).subscribe( res =>{\n      this.posting = false;\n      if(res.status){\n        this.getComments();\n        this.comment = ''\n      }\n\n    })\n  }\n  back(){\n    this.location.back();\n  }\n  getComments(){\n    console.log('comments',this.comment);\n    if(this.comment == null){\n      return false;\n    }\n    this.films.getAllComments(this.film.film_id).subscribe( res =>{\n\n       this.comments = res.comments\n    })\n  }\n\n}\n","\n<div class=\"row m-5\">\n  <div class=\"container\">\n    <h2 class=\"text-center my-2\">Movie Details</h2>\n    <button class=\"btn btn-primary\" (click)=\"back()\">Back</button>\n    <div class=\"col-lg-12\">\n      <div class=\"text-dark\">\n          <img class=\"img-fluid p-4\" max-height=\"600px\" src=\"{{film.photo}}\" alt=\"movie image\">\n        <div class=\"p-4\">\n          <h6 class=\"\">Movie Title : {{film.name}}</h6>\n          <p class=\"\">Movie Genre : <span *ngFor=\"let genre of film.genre\" class=\"badge badge-warning\">{{genre}}</span></p>\n          <p>Movie Release Date : {{film.releasedate}}</p>\n          <p>Movie Country: {{film.country}}</p>\n          <p>Movie Rating :  {{film.rating}}</p>\n          <p class=\"mb-3\">Movie Ticket Price :  {{film.ticketprice}}</p>\n          <p>Description : {{film.description}}</p>\n          <hr class=\"my-3\">\n          <div class=\"row bootstrap snippets\">\n            <div class=\"col-lg-12 col-md-offset-2 col-sm-12\">\n                <div class=\"comment-wrapper\">\n                    <div class=\"panel panel-info\">\n                        <div class=\"panel-heading\">\n                            Comment panel\n                        </div>\n                        <div class=\"panel-body\">\n                            <textarea class=\"form-control\"  placeholder=\"write a comment...\" [(ngModel)]=\"comment\" rows=\"3\"></textarea>\n                            <br>\n                            <button type=\"button\" class=\"btn btn-info pull-right\" *ngIf=\"!posting\" (click)=\"postComment()\">Post</button>\n                            <button type=\"button\" class=\"btn btn-info pull-right\" disabled *ngIf=\"posting\">Posting</button>\n                            <div class=\"clearfix\"></div>\n                            <hr>\n                            <ul class=\"media-list\" >\n                                <li class=\"media\" *ngFor=\"let message of comments\">\n                                  <div class=\"media-body\">\n                                      <span class=\"text-muted pull-right\">\n                                          <small class=\"text-muted\">{{message.created | date}}</small>\n                                      </span>\n                                      <strong class=\"text-success\">@{{message.user_name}}</strong>\n                                      <p>\n                                          {{message.comment}}.\n                                      </p>\n                                  </div>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FilmsService } from '../services/films.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-films',\n  templateUrl: './films.component.html',\n  styleUrls: ['./films.component.css']\n})\nexport class FilmsComponent implements OnInit {\n\n  films : any[] =[{\n    name : \"\",\n    photo: \"\",\n    genre : \"\",\n    description : \"\"\n  }];\n  index:number = 0;\n\n  constructor(private filmService : FilmsService,\n     private route : Router) { }\n\n\n  ngOnInit(): void {\n    this.getAllFilms();\n    console.log('index',this.index);\n  }\n\n  getAllFilms(){\n    this.filmService.getAllFilms().subscribe( (data:any) =>{\n      console.log('data',data);\n\n      this.films = data.films;\n      this.films.forEach(element => {\n        element.genre = JSON.parse(element.genre);\n      });\n\n      console.log('fims',this.films);\n\n    })\n  }\n  getDetail(){\n    //pass an extra value as state with route navigate\n    this.route.navigate(['films/',this.films[this.index].name],{state : {id : this.films[this.index].film_id}})\n\n  }\n\n  next():any{\n    this.index++;\n    console.log('index',this.index);\n  }\n  prev():any{\n    this.index--;\n  }\n\n\n}\n","<h2 class=\"text-center mt-3\">Movie Lists</h2>\n<div class=\"row m-5\">\n  <div class=\"container\">\n    <div class=\"col-md-12\">\n      <div class=\"card bg-light text-dark\">\n        <img class=\"card-img img-fluid p-4\" src=\"{{films[index].photo}}\" alt=\"{{films[index].name}}\">\n\n        <div class=\"card-body p-4\">\n          <h6 class=\"card-title\">Movie title : {{films[index].name}}</h6>\n          <p class=\"card-title\" >Movie Genre : <span class=\"badge badge-warning mx-1\" *ngFor=\"let genre of films[index].genre\"> {{genre}} </span></p>\n\n          <p class=\"card-text\">Description :{{ (films[index].description.length>100)? (films[index].description | slice:0:100)+'...':(films[index].description) }}<small>...</small><a class=\"btn btn-primary text-light\" (click)=\"getDetail()\">&nbsp;Know More</a></p>\n\n        </div>\n        <hr>\n        <div class=\"card-button float-left\">\n          <button type=\"button\" *ngIf=\"index != 0\"  class=\"btn btn-primary text-light float-left m-3\" (click)=\"prev();\">Prev</button>\n          <button type=\"button\" *ngIf=\"index + 1 != films.length\"  class=\"btn btn-primary text-light float-left m-3\" (click)=\"next();\" >Next</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService} from '../services/auth/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  email : string;\n  password: string;\n  success : boolean = false;\n  errormessage : string;\n  onlogin : boolean = false;\n\n  constructor(private authService : AuthService, private router : Router) { }\n\n  ngOnInit(): void {\n  }\n\n  login(){\n    if(this.email == null || this.password == null ){\n      this.errormessage = \" Enter email and password\";\n      return console.error('enter email/password');\n    }\n    if(!this.validateEmail(this.email)){\n      this.errormessage = \" Email is not Valid\";\n      return console.log(this.validateEmail(this.email));\n    }\n    this.onlogin = true;\n\n    this.authService.login(this.email,this.password).subscribe( (data:any) =>{\n      this.onlogin = false;\n      console.log('data',data);\n      if(data.status){\n        this.success = true;\n        this.router.navigate(['/films']);\n      }\n      else{\n        this.errormessage = data.message;\n      }\n    })\n\n  }\n\n  validateEmail(email) {\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n\n\n}\n\n\n","<div class=\"container h-100 mt-5\">\n  <div class=\"d-flex justify-content-center h-100\">\n    <div class=\"user_card\">\n      <div class=\"d-flex justify-content-center\">\n        <h3>Films</h3>\n      </div>\n      <div class=\"d-flex justify-content-center mt-2\">\n        <h5>Login</h5>\n      </div>\n      <div class=\"d-flex justify-content-center form_container\">\n        <form >\n          <div class=\"input-group mb-3\">\n            <div class=\"input-group-append\">\n              <span class=\"input-group-text\"><i class=\"fa fa-envelope-square\"></i></span>\n            </div>\n            <input type=\"email\" name=\"email\" [(ngModel)]= \"email\" class=\"form-control input_user\" value=\"\" placeholder=\"email\">\n          </div>\n          <div class=\"input-group mb-2\">\n            <div class=\"input-group-append\">\n              <span class=\"input-group-text\"><i class=\"fa fa-key\"></i></span>\n            </div>\n            <input type=\"password\" name=\"password\" [(ngModel)]= \"password\" class=\"form-control input_pass\" value=\"\" placeholder=\"password\">\n          </div>\n          <div class=\"form-group\">\n            <div class=\"custom-control custom-checkbox\">\n              <input type=\"checkbox\" class=\"custom-control-input\" id=\"customControlInline\">\n              <label class=\"custom-control-label\" for=\"customControlInline\">Remember me</label>\n            </div>\n          </div>\n            <div class=\"d-flex justify-content-center mt-3 login_container\">\n         <button type=\"submit\" name=\"signin\" [disabled]=\"onlogin\" class=\"btn login_btn\" (click) =\"login()\">Login</button>\n         </div>\n         <p class=\"text-danger text-center\"> {{errormessage}} </p>\n        </form>\n      </div>\n\n      <div class=\"mt-4\">\n        <div class=\"d-flex justify-content-center links\">\n          Don't have an account? <a routerLink=\"/register\" class=\"ml-2\">Sign Up</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService} from '../services/auth/auth.service';\nimport { error } from '@angular/compiler/src/util';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  name:string;\n  email:string;\n  password:string;\n  success:boolean =false;\n  onregister : boolean = false;\n  errormessage : string = '';\n\n\n  constructor(private authService : AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n  register(){\n    this.errormessage = \"\"\n    if(this.name == '' || this.email == '' || this.password == ''){\n      console.log('error')\n      this.errormessage = \" All fields are Required\"\n      return false;\n    }\n    this.onregister = true;\n    let user = {\n      'name' : this.name,\n      'email' : this.email,\n      'password' : this.password\n    }\n    this.authService.register(user).subscribe(data => {\n      this.onregister = false;\n      if(data.status){\n        this.success = true;\n        this.name = '';\n        this.email = '';\n        this.password = '';\n      }\n      else{\n        this.errormessage = data.message;\n      }\n    })\n\n  }\n\n}\n","<div class=\"container h-100 mt-5\">\n  <div class=\"d-flex justify-content-center h-100\">\n    <div class=\"user_card\">\n      <div class=\"d-flex justify-content-center\">\n        <h3>Films</h3>\n      </div>\n      <div class=\"d-flex justify-content-center mt-2\">\n        <h5>Register</h5>\n      </div>\n      <div class=\"d-flex justify-content-center form_container\">\n        <form >\n          <div class=\"input-group mb-3\">\n            <div class=\"input-group-append\">\n              <span class=\"input-group-text\"><i class=\"fa fa-user\"></i></span>\n            </div>\n            <input type=\"text\" name=\"name\" [(ngModel)]=\"name\" class=\"form-control input_user\" value=\"\" placeholder=\"name\">\n          </div>\n          <div class=\"input-group mb-3\">\n            <div class=\"input-group-append\">\n              <span class=\"input-group-text\"><i class=\"fa fa-envelope-square\"></i></span>\n            </div>\n            <input type=\"email\" name=\"email\" [(ngModel)]=\"email\" class=\"form-control input_user\" value=\"\" placeholder=\"email\">\n          </div>\n          <div class=\"input-group mb-3\">\n            <div class=\"input-group-append\">\n              <span class=\"input-group-text\"><i class=\"fa fa-key\"></i></span>\n            </div>\n            <input type=\"password\" name=\"password\" [(ngModel)]=\"password\" class=\"form-control input_pass\" value=\"\" placeholder=\"password\">\n          </div>\n\n            <div class=\"d-flex justify-content-center mt-3 login_container\">\n         <button type=\"submit\" name=\"signup\" class=\"btn login_btn\" (click)= \"register()\">Sign Up</button>\n         </div>\n         <p class=\"text-success\" *ngIf=\"success\">Registered Successfully</p>\n         <p class=\"text-danger\" >{{errormessage}}</p>\n        </form>\n      </div>\n\n      <div class=\"mt-4\">\n        <div class=\"d-flex justify-content-center links\">\n          Already have an account? <a routerLink=\"/login\" class=\"ml-2\">Sign In</a>\n        </div>\n        <!-- <div class=\"d-flex justify-content-center links\">\n          <a href=\"#\">Forgot your password?</a>\n        </div> -->\n      </div>\n    </div>\n  </div>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { Router} from '@angular/router'\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { ApiUrl} from '../../app.constant';\n\n@Injectable()\nexport class AuthService {\n\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n  currentUser = {};\n  constructor(private http: HttpClient,private route:Router) { }\n\n  login(email: string, password: string): Observable<boolean> {\n    return this.http.post<{access_token: string;success:boolean}>(ApiUrl + 'auth/login', {email: email, password: password})\n      .pipe(\n        map((result:any) => {\n          if(result.status){\n            localStorage.setItem('access_token', result.access_token);\n          }\n          return result;\n        })\n      );\n  }\n\n  logout() {\n    localStorage.removeItem('access_token');\n  }\n\n  register(user: any): Observable<any>{\n    console.log('data',user);\n    return this.http.post<{status: boolean}>(ApiUrl + 'auth/register',user)\n    .pipe(\n      map(result => {\n\n          return result;\n\n      })\n    );\n  }\n\n  getToken() {\n    return localStorage.getItem('access_token');\n  }\n\n  get isLoggedIn(): boolean {\n    let authToken = localStorage.getItem('access_token');\n    return (authToken !== null) ? true : false;\n  }\n\n  getUserProfile(id): Observable<any> {\n    let api = `${ApiUrl}/user-profile/${id}`;\n    return this.http.get(api, { headers: this.headers }).pipe(\n      map((res: Response) => {\n        return res || {}\n      }),\n      catchError(this.handleError)\n    )\n  }\n\n  handleError(error: HttpErrorResponse) {\n    let msg = '';\n    if (error.error instanceof ErrorEvent) {\n      // client-side error\n      msg = error.error.message;\n    } else {\n      // server-side error\n      msg = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(msg);\n  }\n\n  public get loggedIn(): boolean {\n    return (localStorage.getItem('access_token') !== null);\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ApiUrl} from '.././app.constant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilmsService {\n\n  constructor(private http: HttpClient) { }\n\n  createFilm(film : any){\n    return this.http.post<{file: string;success:boolean}>(ApiUrl + 'films/create', film)\n      .pipe(\n        map((result:any) => {\n          console.log('result',result)\n          if(result.success){\n            return true;\n          }\n        })\n      );\n  }\n\n  getAllFilms(){\n    return this.http.post<{result:any}>(ApiUrl + 'films/getAllfilms',{})\n      .pipe(\n        map((result:any) => {\n          return result;\n        })\n      );\n  }\n\n  getFilm(id : any){\n    return this.http.post<{file: string;success:boolean}>(ApiUrl + 'films/getfilm',{id : id})\n      .pipe(\n        map((result:any) => {\n          return result;\n        })\n      );\n  }\n\n  postComment(comment,filmid){\n    return this.http.post<{file: string;success:boolean}>(ApiUrl + 'films/comment',{comment,filmid})\n      .pipe(\n        map((result:any) => {\n          return result;\n        })\n      );\n  }\n\n  getAllComments(film_id){\n    return this.http.post<{result:any}>(ApiUrl + 'comments/getAllcomments',{film_id})\n      .pipe(\n        map((result:any) => {\n          return result;\n        })\n      );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router} from '@angular/router'\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { ApiUrl} from '.././app.constant';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadService {\n\n  constructor(private http: HttpClient,private route:Router) { }\n\n  upload(file) {\n    const formData = new FormData();\n    formData.append('file', file);\n    return this.http.post<{file: string;success:boolean}>(ApiUrl + 'uploadImage', formData)\n      .pipe(\n        map((result:any) => {\n          console.log('result',result)\n          if(result.success){\n\n            // localStorage.setItem('access_token', result.access_token);\n            return result;\n          }\n        })\n      );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Footer -->\n<footer class=\"page-footer font-small dark\">\n\n  <!-- Copyright -->\n  <div class=\"mini-footer\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"copyright-text\">\n            <p>© 2018\n              <a href=\"#\">Films</a>. All rights reserved. Created by\n              <a href=\"#\">Shafaz</a>\n            </p>\n          </div>\n\n          <div class=\"go_top\">\n            <span class=\"icon-arrow-up\"></span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- Copyright -->\n\n</footer>\n<!-- Footer -->\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"bs-example\" >\n  <nav class=\"navbar navbar-expand-md navbar-dark bg-dark\">\n    <a  class=\"navbar-brand\" routerLink=\"/films\">Films</a>\n    <button type=\"button\" class=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div class=\"collapse navbar-collapse justify-content-between\" id=\"navbarCollapse\">\n        <div class=\"navbar-nav\">\n            <a class=\"nav-item nav-link active\" routerLink=\"/films\">Home</a>\n            <!-- <a class=\"nav-item nav-link\" >Create Films</a> -->\n            <!-- <div class=\"nav-item dropdown\">\n                <a href=\"#\" class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\">Messages</a>\n                <div class=\"dropdown-menu\">\n                    <a href=\"#\" class=\"dropdown-item\">Inbox</a>\n                    <a href=\"#\" class=\"dropdown-item\">Sent</a>\n                    <a href=\"#\" class=\"dropdown-item\">Drafts</a>\n                </div>\n            </div> -->\n        </div>\n        <form class=\"form-inline\">\n            <div class=\"input-group\">\n                <!-- <input type=\"text\" class=\"form-control\" placeholder=\"Search\"> -->\n                <div class=\"input-group-append\">\n                    <button type=\"button\" class=\"btn btn-secondary\" routerLink = 'films/create'><i class=\"fa fa-pencil\"></i> Create New Film</button>\n                </div>\n            </div>\n        </form>\n        <div class=\"navbar-nav\">\n            <a routerLink=\"/login\" class=\"nav-item nav-link\">Login</a>\n        </div>\n    </div>\n  </nav>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}